services:
  backend:
    image: ${DOCKERHUB_USERNAME}/monkids-backend:latest
    container_name: monkids_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - backend-network
    environment:
      - NODE_ENV=production
      - PORT=8000
      # Database Configuration
      - DATABASE_HOST=172.31.14.122
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=postgres
      # JWT Configuration
      - JWT_SECRET=monkids-jwt-secret-key-2024
      - JWT_REFRESH_SECRET=monkids-jwt-refresh-secret-key-2024
      - JWT_EXPIRATION=1d
      - JWT_REFRESH_EXPIRATION=7d
      # Google OAuth2 Configuration (skip)
      - GOOGLE_CLIENT_ID=542269964324-6kmatcq5rp19lefr3eiouu60hkqdg6jk.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_CALLBACK_URL=https://api.monkids.site/api/auth/google/callback
      - FRONTEND_URL=https://www.monkids.site
      # Chrome/Puppeteer Configuration
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome
      - PUPPETEER_NO_SANDBOX=true
      - DISPLAY=:99
    security_opt:
      - seccomp=unconfined
    cap_add:
      - SYS_ADMIN
    volumes:
      - ./data:/app/data
      - /tmp/.X11-unix:/tmp/.X11-unix
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        mode: "non-blocking"
        tag: "{{.Name}}"

  nginx:
    image: ${DOCKERHUB_USERNAME}/monkids-nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - nginx-cache:/var/cache/nginx
    tmpfs:
      - /tmp
    depends_on:
      backend:
        condition: service_started
      prometheus:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - backend-network
    environment:
      - NGINX_HOST=api.monkids.site
      - ALLOWED_ORIGIN=https://www.monkids.site
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        mode: "non-blocking"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - backend-network
    depends_on:
      - prometheus
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - backend-network
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  backend-cache:
  nginx-cache:
