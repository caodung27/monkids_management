# Define upstream backend server
upstream backend {
    server backend:8000;
    keepalive 32;
}

# API endpoints logging format
log_format api_debug escape=json
    '{'
    '"remote_addr": "$remote_addr",'
    '"remote_user": "$remote_user",'
    '"time_local": "$time_local",'
    '"request": "$request",'
    '"status": "$status",'
    '"body_bytes_sent": "$body_bytes_sent",'
    '"http_referer": "$http_referer",'
    '"http_user_agent": "$http_user_agent",'
    '"http_x_forwarded_for": "$http_x_forwarded_for",'
    '"http_origin": "$http_origin",'
    '"http_x_origin": "$http_x_origin",'
    '"http_host": "$http_host",'
    '"request_method": "$request_method",'
    '"upstream_http_origin": "$upstream_http_origin",'
    '"upstream_http_x_origin": "$upstream_http_x_origin",'
    '"request_headers": "$request"'
    '}';

# HTTP server for redirects and health checks
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name api.monkids.site;

    # Health check endpoint on HTTP
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy';
    }

    # Allow direct HTTP access to API health check
    location = /api/health {
        proxy_pass http://backend/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Origin $http_origin;
        access_log off;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name api.monkids.site;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/api.monkids.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.monkids.site/privkey.pem;
    
    # Improved SSL configuration
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: http: data: blob: 'unsafe-inline'; frame-ancestors 'self' https://www.monkids.site;" always;

    # Increase timeouts for long-running requests
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Error logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined;

    # API endpoints
    location /api/ {
        # Remove any CORS headers from backend
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Expose-Headers;
        proxy_hide_header Access-Control-Max-Age;

        # Proxy configuration
        proxy_pass http://backend/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' 'https://www.monkids.site' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Origin, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://www.monkids.site' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Origin, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Error handling
        proxy_intercept_errors on;
        error_page 404 = @error404;
        error_page 500 502 503 504 = @error50x;
    }

    # Error pages
    location @error404 {
        default_type application/json;
        return 404 '{"error":"Not Found","message":"The requested resource was not found"}';
    }

    location @error50x {
        default_type application/json;
        return 500 '{"error":"Internal Server Error","message":"Something went wrong"}';
    }

    # Redirect all other requests to frontend
    location / {
        return 301 https://www.monkids.site$request_uri;
    }
}