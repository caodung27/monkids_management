name: Deploy Backend to EC2

on:
  workflow_run:
    workflows: ["Build and Push Docker Image in Docker Hub"]
    types:
      - completed
    branches: [ "main" ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/monkids-backend:latest

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2.key
          chmod 600 ~/.ssh/ec2.key
          cat >>~/.ssh/config <<END
          Host ec2
            HostName ${{ secrets.EC2_HOST }}
            User ${{ secrets.EC2_USERNAME }}
            IdentityFile ~/.ssh/ec2.key
            StrictHostKeyChecking no
          END

      - name: Setup Project Directory
        run: |
          ssh ec2 '
          # Create project directory if it doesn't exist
          mkdir -p ~/monkid_management
          mkdir -p ~/monkid_management/data
          
          # Set proper permissions
          chmod 755 ~/monkid_management
          '

      - name: Cleanup EC2 Disk Space
        run: |
          ssh ec2 '
          # Remove unused Docker resources
          docker system prune -af --volumes
          
          # Remove old Docker images except the current running ones
          docker images -q | xargs -r docker rmi -f
          
          # Clean package manager cache
          sudo apt-get clean
          sudo apt-get autoremove -y
          
          # Display disk space after cleanup
          df -h
          '

      - name: Setup EC2 for Docker
        run: |
          ssh ec2 '
          # Login to Docker Hub
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin && \
          
          # Pull the new image
          docker pull ${{ env.DOCKER_IMAGE }} || {
            echo "Failed to pull image. Checking disk space..."
            df -h
            exit 1
          }'

      - name: Update docker-compose.yml
        run: |
          cat > docker-compose.yml <<'EOL'
          version: '3.8'
          
          services:
            backend:
              image: ${DOCKER_USERNAME}/monkids-backend:latest
              container_name: monkids_backend
              restart: unless-stopped
              ports:
                - "8000:8000"
              environment:
                - NODE_ENV=production
                - PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome
                - PUPPETEER_NO_SANDBOX=true
                - DISPLAY=:99
              security_opt:
                - seccomp=unconfined
              cap_add:
                - SYS_ADMIN
              volumes:
                - ./data:/app/data
                - /tmp/.X11-unix:/tmp/.X11-unix
              tmpfs:
                - /tmp
              deploy:
                resources:
                  limits:
                    cpus: '1.0'
                    memory: 2G
                  reservations:
                    cpus: '0.5'
                    memory: 1G
              healthcheck:
                test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
                interval: 30s
                timeout: 10s
                retries: 3
                start_period: 40s

            nginx:
              image: nginx:alpine
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ../nginx/nginx.conf:/etc/nginx/conf.d/default.conf
                - /etc/letsencrypt:/etc/letsencrypt:ro
                - nginx-cache:/var/cache/nginx
              tmpfs:
                - /tmp
              depends_on:
                backend:
                  condition: service_healthy
              networks:
                - monkids-network
              logging:
                driver: "json-file"
                options:
                  max-size: "5m"
                  max-file: "3"
              deploy:
                resources:
                  limits:
                    cpus: '0.1'
                    memory: 128M
              healthcheck:
                test: ["CMD", "nginx", "-t"]
                interval: 30s
                timeout: 10s
                retries: 3
              restart: unless-stopped

          networks:
            monkids-network:
              driver: bridge

          volumes:
            nginx-cache:
          EOL
          scp docker-compose.yml ec2:~/monkid_management/

      - name: Deploy with Docker Compose
        run: |
          ssh ec2 'cd ~/monkid_management && \
          # Set environment variables
          export DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} && \
          export DOCKER_IMAGE=${{ env.DOCKER_IMAGE }} && \
          
          # Stop and remove existing containers
          docker compose down && \
          
          # Clean up any dangling images and volumes
          docker system prune -f && \
          
          # Pull and start new containers
          docker compose pull && \
          docker compose up -d --force-recreate backend'

      - name: Monitor Deployment
        run: |
          ssh ec2 '
          # Check disk space
          echo "Current disk space:"
          df -h
          
          # Check Docker status
          echo "Docker container status:"
          docker ps -a
          
          # Check container logs
          echo "Container logs:"
          docker logs monkids_backend --tail 50 2>&1 || echo "Container logs not available yet"
          '

      - name: Health check
        run: |
          MAX_RETRIES=5
          RETRY_COUNT=0
          until ssh ec2 'curl -f http://localhost:8000/api/health' || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
            echo "Health check failed. Retrying in 10 seconds..."
            sleep 10
            RETRY_COUNT=$((RETRY_COUNT + 1))
          done
          
          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Health check failed after $MAX_RETRIES attempts"
            exit 1
          fi 