name: Deploy Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'

env:
  REGISTRY: docker.io
  REGISTRY_URL: docker.io/${{ secrets.DOCKERHUB_USERNAME }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/monkids-backend
  NGINX_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/monkids-nginx
  MAX_RETRIES: 3
  RETRY_DELAY: 5
  HEALTH_CHECK_RETRIES: 3
  HEALTH_CHECK_INTERVAL: 10
  DEPLOY_TIMEOUT: 180

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache,mode=max

      - name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          push: true
          tags: ${{ env.NGINX_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.NGINX_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.NGINX_IMAGE }}:buildcache,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/monkid_management
            
            # Pull latest images
            docker-compose pull
            
            # Stop and remove existing containers
            docker-compose down --remove-orphans
            
            # Start services
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} docker-compose up -d
            
            # Wait for initial startup
            sleep 30
            
            # Run debug script if exists, otherwise create it
            if [ ! -f backend/ci-debug.sh ]; then
              cat > backend/ci-debug.sh << 'EOL'
              ${{ github.workspace }}/backend/ci-debug.sh
              EOL
              chmod +x backend/ci-debug.sh
            fi
            
            # Run debug script and capture output
            ./backend/ci-debug.sh || {
              echo "Debug script detected issues. Checking container logs..."
              docker-compose logs
              exit 1
            }
            
            # Verify deployment
            for i in {1..3}; do
              if docker-compose ps --format json | grep -q '"Health": "healthy"' && \
                 wget -q --spider --timeout=5 --no-check-certificate https://api.monkids.site/api/health; then
                echo "Deployment verified successfully"
                exit 0
              fi
              
              echo "Verification attempt $i failed, retrying..."
              sleep 5
            done
            
            echo "Deployment verification failed"
            docker-compose logs
            exit 1

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Deployment Failed',
              body: `Deployment failed for commit ${context.sha}. Please check the [workflow logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`
            }); 